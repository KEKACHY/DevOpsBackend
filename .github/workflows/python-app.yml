name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  SONAR_HOST_URL: "http://188.225.42.100:9000"   
  SONAR_PROJECT_KEY: "DevOpsLab4"     

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        env:
          SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_URI }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  sonar:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
            -Dsonar.qualitygate.wait=true

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Set up Python 3.9
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install -e .

  #     - name: Run tests
  #       env:
  #         SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_TEST_URI }}
  #         SECRET_KEY: ${{ secrets.SECRET_KEY }}
  #       run: |
  #         PYTHONPATH=. pytest tests/ -v --disable-warnings